{
    "problem_index": 7,
    "java_code": "public int maxSubArraySum(int[] nums) {\n    if (nums.length == 0) return 0;\n    int maxSoFar = nums[0];\n    int currentMax = nums[0];\n    for (int i = 1; i < nums.length; i++) {\n        currentMax = Math.max(nums[i], currentMax + nums[i]);\n        maxSoFar = Math.max(maxSoFar, currentMax);\n    }\n    return maxSoFar;\n}",
    "parameters": [
        {
            "name": "nums",
            "type": "int[]"
        }
    ],
    "return_values": [
        {
            "type": "int"
        }
    ],
    "tests": [
        {
            "input": [-2, -3, 4, -1, -2, 1, 5, -3],
            "output": 7
        },
        {
            "input": [1, 2, 3, 4],
            "output": 10
        },
        {
            "input": [-1, -2, -3, -4],
            "output": -1
        },
        {
            "input": [5],
            "output": 5
        },
        {
            "input": [-1, 2, 3, -2, 5],
            "output": 8
        },
        {
            "input": [],
            "output": 0
        },
        {
            "input": [0, -1, 2, 3, -6, 4],
            "output": 5
        },
        {
            "input": [-2, 1, -3, 4, -1, 2, 1, -5, 4],
            "output": 6
        }
    ]
}
